=== Defining a debug representation
The debug layer is an extension on top of a graphical editor defined with ((Sirius)) that represent runtime data and current instruction. See <<defining-a-concrete-syntax-with-sirius-section>> for more details about ((Sirius)). This section will cover the debug representation creation wizard and technical implementation details. Technical implementation details are only useful for advanced use case and troubleshooting.

==== The debug representation wizard
This wizard creates a layer to represent the current instruction and add commands to manage break points and launch a simulation in debug mode. This is a default implementation, it can be customized to represent runtime data for instance. The customization use the ((Sirius)) description definition, see the http://www.eclipse.org/sirius/doc/specifier/Sirius%20Specifier%20Manual.html[Sirius Specifier Manual] for more details.
The wizard present three ways of implementing this layer:

* Create a debug diagram description
* Extends an existing diagram description
* Add a debug layer to an existing diagram description

image::images/workbench/language/debug_representation_wizard/wizard.png[Debug representation wizard]

===== Create a debug diagram description
It creates a diagram representation with a default debug layer. The representation do not depend on an other representation. A typical use case is a language where the runtime data representation is too far from the language graphical syntax.

image::images/workbench/language/debug_representation_wizard/create/1.png[Debug representation wizard]

image::images/workbench/language/debug_representation_wizard/create/2.png[Debug representation wizard]

===== Extend an existing diagram description
It creates a diagram representation with a default debug layer that extends an existing representation. This allow to have a debug layer based on the representation of the language concrete syntax. The language concrete syntax can be deployed without the debug representation. A typical use case is the reuse of an existing diagram definition that you can't modify yourself. For instance if you want to use http://eclipse.org/modeling/mdt/?project=uml2[UML], you can reuse the http://www.umldesigner.org/[UML Designer].

image::images/workbench/language/debug_representation_wizard/extend/1.png[Debug representation wizard]

You can select any diagram description.

image::images/workbench/language/debug_representation_wizard/extend/2.png[Debug representation wizard]

image::images/workbench/language/debug_representation_wizard/extend/3.png[Debug representation wizard]

===== Add a debug layer to an existing diagram description
It creates a default debug layer in an existing diagram representation. This should be used if you are also in charge of the language concrete syntax.

image::images/workbench/language/debug_representation_wizard/add/1.png[Debug representation wizard]

You can only select a diagram description from the workspace.

image::images/workbench/language/debug_representation_wizard/add/2.png[Debug representation wizard]

==== Implementation details
Implementation details are for advanced use and troubleshooting. It explains how the implementation works behind the scene. There are two main elements covered here are the debugger services class and the debug layer itself.

===== Debugger services
The debugger services class is use to tell which representations should be activated and refreshed during debug (see the getRepresentationRefreshList() method). It also provide a method to know if an element of the diagram is the current instruction (see isCurrentInstruction() method).

image::images/workbench/language/debug_services.png[Debug services]

===== Debug layer
The default debug layer add action to start the simulation in debug mode and to toggle breakpoints (1). When a break point is present for an element of the diagram a visual feedback is displayed according to the breakpoint state (2). The current instruction is also highlighted in yellow by default (3)

image::images/workbench/language/debug_layer.png[Debug layer]

This is a default debug layer, it can be customized to fit your needs. The customization use the ((Sirius)) description definition, see the http://www.eclipse.org/sirius/doc/specifier/Sirius%20Specifier%20Manual.html[Sirius Specifier Manual] for more details.

