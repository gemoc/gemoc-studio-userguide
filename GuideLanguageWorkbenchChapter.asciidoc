== Gemoc Language workbench

=== Language Workbench overview

The GEMOC Language Workbench, intended to be used by ((language designer))s:  it allows building and composing new executable DSMLs.


[[figure-glw-screenshot-of-language_workbench]]
.Screenshot of GEMOC Studio Language Workbench on the TFSM (Timed Finite State Machine) example.
image::images/gemoc_language_workbench_TFSM_screenshot.png[Screenshot of GEMOC Studio Language Workbench on the TFSM (Timed Finite State Machine) example]
(((TFSM)))
(((TFSM,Language workbench)))

'''

=== Gemoc Language project

In the menu go to: File> New> Projects...> Gemoc Language project

This project will be the aggregator of the other Eclipse projects that will constitute the components of a Language Unit of the xDSML.

It mainly defines a project.xdsml file that references these other components.

The xDSML file isn't supposed to be edited manually. The pop up menu on the project (available on right click) or the <<section-process-support-view>> provides a set of wizard to fill this file.   


From these information, the project will generate additional code that will be used by the execution engine when the language will be deployed and used by the <<chapter-gemoc-modeling-workbench>>.   

=== Defining Abstract Syntax (or domain concepts)

Defining the abstract syntax (AS) in the Language Workbench is done thanks to an EMF Ecore project.

All ecore editors can be used to edit the concepts in the ecore file.

TODO new project wizard (via popup, via process)
TODO select existing project
TODO Ecore editor



===  Defining RunTime Data

=== Defining Domain-Specific Actions (DSAs)

=== Defining Domain-Specific Constraints

=== Defining a concrete syntax
The xDSML can support different concrete syntaxes. Most EMF based editors should work however Gemoc provides additional support for some editors.
Editors explictly supported are: EMF tree editor, xText editor, Sirius editor.

==== Defining a concrete syntax with xText

==== Defining a concrete syntax with ((Sirius))

=== Defing Model of Concurrency (MoC)

=== Defining Domain Specific Events (DSE)

=== Defining an animation view
The animation layer is an extension on top of a graphical editor defined with ((Sirius)).

TODO Debug layer, Animation layer

[[section-process-support-view]]
=== Process support view

TODO present process view
